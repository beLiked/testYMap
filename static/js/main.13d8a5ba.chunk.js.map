{"version":3,"sources":["yandexMap.js","App.js","reportWebVitals.js","index.js"],"names":["mapState","center","zoom","controls","City","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","onItemClick","coords","setState","render","loadData","oThis","assertThisInitialized","myMap","react_default","a","createElement","id","name","onChange","e","data","nPos","nCount","length","oEntry","target","value","setCenter","parseFloat","handleSelect","selected","react_yandex_maps_esm","width","height","onLoad","ymaps","instanceRef","loaded","passedCities","geoObjects","removeAll","sort","l","r","oSelect","document","getElementById","myPlacemark","Placemark","add","option","innerHTML","appendChild","console","log","React","Component","App","className","type","event","Papa","parse","files","header","skipEmptyLines","complete","results","accept","style","display","margin","yandexMap","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.13d8a5ba.chunk.js","sourcesContent":["// import React from \"react\";\r\n// import { YMaps, Map, Placemark} from \"react-yandex-maps\";\r\n// import city from \"./App\"\r\n\r\n// export default class Component extends React.Component {\r\n\r\n//     constructor(props){\r\n//       super(props)\r\n//       this.myMap = null;\r\n//       this.ymaps = null;\r\n\r\n//     }\r\n\r\n//     render() {\r\n//         const initYMap = (ymaps) => {this.ymaps = ymaps;}\r\n//         const initMyMap = (myMap) => {this.myMap = myMap;}\r\n//         const mapData = {\r\n//             center: [9,61],\r\n//             zoom: 13,\r\n//           };\r\n\r\n//       return (\r\n//         <YMaps>\r\n//         <div>\r\n//           <Map width=\"100%\"\r\n//           height=\"400px\"\r\n//           state={mapData}\r\n//           onLoad={initYMap}\r\n//           instanceRef={initMyMap} >\r\n//             <Placemark   />\r\n//           </Map>\r\n//         </div>\r\n//       </YMaps>\r\n//       );\r\n//     }\r\n//   }\r\n\r\nimport React from \"react\";\r\nimport { YMaps, Map, ListBox, ListBoxItem, Placemark } from \"react-yandex-maps\";\r\n\r\nconst mapState = { center: [55.630527, 37.849046], zoom: 10, controls: [] };\r\nconst cities = [];\r\n\r\nclass City extends React.Component {\r\n  state = mapState;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.myMap = null;\r\n    this.ymaps = null;\r\n    this.loaded = false;\r\n  }\r\n\r\n  onItemClick = (coords) => {\r\n    this.setState({ center: coords });\r\n  };\r\n\r\n  loadData() {\r\n    const ymaps = this.ymaps;\r\n    if (!ymaps || !this.myMap || this.loaded) return;\r\n    this.loaded = true;\r\n    let passedCities = {};\r\n\r\n    this.myMap.geoObjects.removeAll();\r\n    this.props.data.sort(function(l, r) {\r\n      if (l[\"CITY\"] < r[\"CITY\"]) return -1;\r\n      else if (l[\"CITY\"] > r[\"CITY\"]) return 1;\r\n      return 0;\r\n    });\r\n    let oSelect = document.getElementById(\"select\");\r\n    for (\r\n      let nPos = 0, nCount = this.props.data.length;\r\n      nPos < nCount;\r\n      ++nPos\r\n    ) {\r\n      let oEntry = this.props.data[nPos];\r\n      let coords = [parseFloat(oEntry[\"LAT\"]), parseFloat(oEntry[\"LNG\"])];\r\n      let myPlacemark = new ymaps.Placemark(coords);\r\n      this.myMap.geoObjects.add(myPlacemark);\r\n      if (passedCities[oEntry[\"CITY\"]]) continue;\r\n      passedCities[oEntry[\"CITY\"]] = 1;\r\n      let option = document.createElement(\"option\");\r\n      option.value = oEntry[\"CITY\"];\r\n      option.innerHTML = oEntry[\"CITY\"];\r\n      oSelect.appendChild(option);\r\n    }\r\n\r\n    console.log(this.props);\r\n  }\r\n  render = () => {\r\n    const initYMap = (ymaps) => {\r\n      this.ymaps = ymaps;\r\n    };\r\n    const initMyMap = (myMap) => {\r\n      this.myMap = myMap;\r\n    };\r\n    this.loadData();\r\n    const oThis = this;\r\n    const myMap = this.myMap;\r\n    const handleSelect = (e) => {\r\n      let data = oThis.props.data;\r\n      for (let nPos = 0, nCount = data.length; nPos < nCount; ++nPos) {\r\n        let oEntry = data[nPos];\r\n        if (oEntry[\"CITY\"] === e.target.value)\r\n          myMap.setCenter([\r\n            parseFloat(oEntry[\"LAT\"]),\r\n            parseFloat(oEntry[\"LNG\"]),\r\n          ]);\r\n      }\r\n    };\r\n    return (\r\n      <div>\r\n        <select\r\n        \r\n          id=\"select\"\r\n          name=\"city\"\r\n          onChange={(e) => handleSelect(e)}\r\n        ><option selected=\"selected\">Выберите город</option></select>\r\n        <YMaps>\r\n          <Map\r\n            width=\"100%\"\r\n            height=\"400px\"\r\n            state={this.state}\r\n            onLoad={initYMap}\r\n            instanceRef={initMyMap}\r\n          >\r\n            <Placemark />\r\n           \r\n          </Map>\r\n        </YMaps>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default City;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport Component from \"./yandexMap.js\";\n\nimport Papa from \"papaparse\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n    };\n  }\n  render() {\n\n    const oThis = this;\n    const changeHandler = (event) => {\n      Papa.parse(event.target.files[0], {\n        header: true,\n        skipEmptyLines: true,\n        complete: function(results) {\n          oThis.setState({\n            data   : results.data\n          });\n        },\n      });\n    };\n\n    return (\n      <div className=\"App\">\n        <h1>Загрузите файл и выберите город</h1>\n\n        <input\n          type=\"file\"\n          name=\"file\"\n          onChange={changeHandler}\n          accept=\".csv\"\n          style={{ display: \"block\", margin: \"10px auto\" }}\n        />\n        <Component data={this.state.data}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n  \n    <App />\n  </React.StrictMode>\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}